name: Dockerfile - Build and Push

on:
  workflow_call:
    inputs:
      context:
        type: string
        required: false
        default: .
        description: "(Optional) Build's context is the set of files located in the specified PATH or URL. Defaults to `.`."
      aws_region:
        type: string
        required: true
        default: ap-northeast-2
        description: "(Required) The AWS region to use. Defaults to `ap-northeast-2`."
      aws_role:
        type: string
        required: false
        description: "(Optional) The path to the `tflint` config file. Defaults to `.tflint.hcl`."
      push_aws_ecr_enabled:
        type: boolean
        required: false
        default: false
        description: "(Optional) Whether to push container images to AWS ECR (Elastic Container Registry). Defaults to `false`."
      push_dockerhub_enabled:
        type: boolean
        required: false
        default: false
        description: "(Optional) Whether to push container images to DockerHub. Defaults to `false`."
      push_ghcr_enabled:
        type: boolean
        required: false
        default: false
        description: "(Optional) Whether to push container images to GHCR (GitHub Container Registry). Defaults to `false`."

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      id: checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      id: setup-qemu
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: setup-docker-buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS Credentials
      id: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: inputs.push_aws_ecr_enabled
      with:
        # role-to-assume: arn:aws:iam::596027827278:role/github-actions-ecr
        mask-aws-account-id: false
        role-skip-session-tagging: true
        aws-region: ap-northeast-2

    - name: Login to AWS ECR (Elastic Container Registry)
      id: login-aws-ecr
      uses: docker/login-action@v2
      if: inputs.push_aws_ecr_enabled
      with:
        registry: 596027827278.dkr.ecr.ap-northeast-2.amazonaws.com

    - name: Login to DockerHub
      id: login-docker-hub
      uses: docker/login-action@v2
      if: inputs.push_dockerhub_enabled
      with:
        username: ${{  }}
        password: ${{  }}

    - name: Login to GHCR (GitHub Container Registry)
      id: login-ghcr
      uses: docker/login-action@v2
      if: inputs.push_ghcr_enabled
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare Docker Metadata
      id: prepare-docker-metadata
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.APP_CONTAINER_REPOSITORY }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=pr
          type=sha,prefix=,suffix=,format=short
          type=match,pattern=(v.*),group=1,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

    - name: Build Container Image
      id: build
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:${{ matrix.path }}"
        platforms: linux/amd64, linux/arm64
        # tags: |
        #   tedilabs/doraemon:latest
        #   ghcr.io/tedilabs/doraemon:latest

    - name: Push Container Image
      id: push
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:doraemon"
        platforms: linux/amd64, linux/arm64
        push: true
        tags: ${{ steps.prepare-docker-metadata.outputs.tags }}
        labels: ${{ steps.prepare-docker-metadata.outputs.labels }}

    outputs:
      labels: ${{ steps.prepare-docker-metadata.outputs.labels }}
      tags: ${{ steps.prepare-docker-metadata.outputs.tags }}
